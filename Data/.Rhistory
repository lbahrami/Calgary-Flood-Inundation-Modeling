mapTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 14,colour = "black"),
plot.subtitle=element_text(face="italic"),
plot.caption=element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),axis.title = element_blank(),
axis.text = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=2)
)
}
library(tidyverse)
library(sf)
library(raster)
library(knitr)
library(kableExtra)
library(tidycensus)
library(tigris)
library(FNN)
library(QuantPsyc)
library(caret)
library(yardstick)
library(pscl)
library(plotROC)
library(ggrepel)
library(pROC)
library(grid)
library(gridExtra)
library(viridis)
mapTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 14,colour = "black"),
plot.subtitle=element_text(face="italic"),
plot.caption=element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),axis.title = element_blank(),
axis.text = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=2)
)
}
mapTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 14,colour = "black"),
plot.subtitle=element_text(face="italic"),
plot.caption=element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),axis.title = element_blank(),
axis.text = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=2)
)
}
Calgary <- st_read("D:/675/Midterm/calgary_criteria/calgary_criteria.shp")
getwd()
setwd("~/New folder/midterm/r")
setwd("~/New folder/midterm/midTermProject_Data/data_prepare/calgary_criteria")
Calgary <- st_read("D:/675/Midterm/calgary_criteria/calgary_criteria.shp")
setwd("~/New folder/midterm/midTermProject_Data/data_prepare/calgary_criteria")
Calgary <- st_read("calgary_criteria.shp")
plot(Calgary[,2:10])
plot(Calgary[,11:14])
ggplot() +
geom_sf(data=Calgary , aes(fill=Flow_Accum)) +
scale_fill_viridis() +
labs(title="Flood Accumulation in Calgary") +
mapTheme()
ggplot() +
geom_sf(data=Calgary , aes(fill=Inundation)) +
scale_fill_viridis() +
labs(title="Inundation in Calgary") +
mapTheme()
Calgary2 <-
Calgary %>%
st_centroid() %>% st_coordinates() %>%
cbind(
Calgary %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flow_lengt, pop_Dens))
head(Calgary)
Calgary2 <-
Calgary %>%
st_centroid() %>% st_coordinates() %>%
cbind(
Calgary %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flow_lenght, pop_Dens))
View(Calgary)
Calgary2 <-
Calgary %>%
st_centroid() %>% st_coordinates() %>%
cbind(
Calgary %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlenght, popDens))
Calgary2 <-
Calgary %>%
st_centroid() %>% st_coordinates() %>%
cbind(
Calgary %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, popDens))
Calgary2 <-
Calgary %>%
st_centroid() %>% st_coordinates() %>%
cbind(
Calgary %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens))
waterdistPlot <-
ggplot() +
geom_sf(data = Calgary2, aes(fill=dist_water)) +
scale_fill_viridis(name="Distance to Water") +
mapTheme()
waterdistPlot <-
ggplot() +
geom_sf(data = Calgary2, aes(fill=dist_water)) +
scale_fill_viridis(name="Distance to Water") +
mapTheme()
View(Calgary2)
waterdistPlot <-
ggplot() +
geom_sf(data = Calgary2, aes(fill=dist_water)) +
scale_fill_viridis(name="Distance to Water") +
mapTheme()
developPlot <-
ggplot() +
geom_sf(data=Calgary2, aes(fill=dev_sum)) +
scale_fill_viridis(name="Developed area") +
mapTheme()
grid.arrange(waterdistPlot,developPlot, ncol=1)
training <-
Calgary2 %>%
filter(training == 1)
training <-
Calgary2 %>%
filter(training == 1)
View(Calgary2)
waterdistPlot <-
ggplot() +
geom_sf(data = Calgary2, aes(fill=dist_water)) +
scale_fill_viridis(name="Distance to Water") +
mapTheme()
training <-
Calgary2 %>%
filter(training == 1)
Cal<- st_read("cal_criteria.shp")
View(Cal)
grid.arrange(waterdistPlot,developPlot, ncol=1)
ggplot(CalgaryPlotVariables, aes(as.factor(Inundation), value, fill=as.factor(Inundation))) +
geom_bar(stat="identity") +
facet_wrap(~key) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Not Inundation","Inundation"),
name = "") +
labs(x="Inundation", y="Value")
Calgary <- st_read("calgary_criteria.shp")
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
select(Inundation, elevation, dist_water, tree_dens, dist_deve,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flow_lengt, pop_Dens) %>%
gather(key, value, elevation:pop_Dens)
CalgaryPlotVariables <-
Cal %>%
as.data.frame() %>%
select(Inundation, elevation, dist_water, tree_dens, dist_deve,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flow_lengt, pop_Dens) %>%
gather(key, value, elevation:pop_Dens)
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
select(Inundation, elevation, dist_water, tree_dens, dist_deve,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens) %>%
gather(key, value, elevation:pop_Dens)
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens) %>%
gather(key, value, elevation:pop_Dens)
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens)
CalgaryPlotVariables <-
Calgary %>%
as.data.frame()
View(Calgary)
Calgary2 <-
Calgary %>%
st_centroid() %>% st_coordinates() %>%
cbind(
Calgary %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens))
waterdistPlot <-
ggplot() +
geom_sf(data = Calgary2, aes(fill=dist_water)) +
scale_fill_viridis(name="Distance to Water") +
mapTheme()
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens) %>%
gather(key, value, elevation:pop_Dens)
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens) %>%
gather(key, value, elevation:PopDens)
ggplot(CalgaryPlotVariables, aes(as.factor(Inundation), value, fill=as.factor(Inundation))) +
geom_bar(stat="identity") +
facet_wrap(~key) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Not Inundation","Inundation"),
name = "") +
labs(x="Inundation", y="Value")
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens) %>%
gather(key, value, elevation:PopDens) %>%
mutate(value = ifelse(key == "Flow_Accum", value/10, value)) %>%
mutate(value=ifelse(key=="basin", value*10000, value))
ggplot(CalgaryPlotVariables, aes(as.factor(Inundation), value, fill=as.factor(Inundation))) +
geom_bar(stat="identity") +
facet_wrap(~key) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Not Inundation","Inundation"),
name = "") +
labs(x="Inundation", y="Value")
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens) %>%
gather(key, value, elevation:PopDens) %>%
mutate(value = ifelse(key == "Flow_Accum", value/100, value)) %>%
mutate(value=ifelse(key=="basin", value*10000, value))
ggplot(CalgaryPlotVariables, aes(as.factor(Inundation), value, fill=as.factor(Inundation))) +
geom_bar(stat="identity") +
facet_wrap(~key) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Not Inundation","Inundation"),
name = "") +
labs(x="Inundation", y="Value")
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens) %>%
gather(key, value, elevation:PopDens) %>%
mutate(value = ifelse(key == "Flow_Accum", value*100, value)) %>%
mutate(value=ifelse(key=="basin", value*10000, value))
ggplot(CalgaryPlotVariables, aes(as.factor(Inundation), value, fill=as.factor(Inundation))) +
geom_bar(stat="identity") +
facet_wrap(~key) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Not Inundation","Inundation"),
name = "") +
labs(x="Inundation", y="Value")
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens) %>%
gather(key, value, elevation:PopDens) %>%
mutate(value = ifelse(key == "Flow_Accum", value*1000, value)) %>%
mutate(value=ifelse(key=="basin", value*10000, value))
ggplot(CalgaryPlotVariables, aes(as.factor(Inundation), value, fill=as.factor(Inundation))) +
geom_bar(stat="identity") +
facet_wrap(~key) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Not Inundation","Inundation"),
name = "") +
labs(x="Inundation", y="Value")
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens) %>%
gather(key, value, elevation:PopDens) %>%
mutate(value = ifelse(key == "Flow_Accum", value*1000, value)) %>%
mutate(value=ifelse(key=="basin", value*1000, value))
ggplot(CalgaryPlotVariables, aes(as.factor(Inundation), value, fill=as.factor(Inundation))) +
geom_bar(stat="identity") +
facet_wrap(~key) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Not Inundation","Inundation"),
name = "") +
labs(x="Inundation", y="Value")
CalgaryPlotVariables <-
Calgary %>%
as.data.frame() %>%
dplyr::select(Inundation, elevation, dist_water, tree_dens,
Residentia, Flow_Accum, dev_sum, basin, dist_slop, dist_park,
flowlength, PopDens) %>%
gather(key, value, elevation:PopDens) %>%
mutate(value = ifelse(key == "Flow_Accum", value*1000, value)) %>%
mutate(value=ifelse(key=="basin", value*10000, value))
ggplot(CalgaryPlotVariables, aes(as.factor(Inundation), value, fill=as.factor(Inundation))) +
geom_bar(stat="identity") +
facet_wrap(~key) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Not Inundation","Inundation"),
name = "") +
labs(x="Inundation", y="Value")
preservePlotVariables <-
preservePlotVariables %>%
mutate(value = ifelse(key == "Flow_Accum", value*100, value))
ggplot(CalgaryPlotVariables, aes(as.factor(Inundation), value, fill=as.factor(Inundation))) +
geom_bar(stat="identity") +
facet_wrap(~key) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Not Inundation","Inundation"),
name = "") +
labs(x="Inundation", y="Value")
grid.arrange(waterdistPlot,developPlot, ncol=3)
trainIndex <- createDataPartition(Calgary$dev_sum, p = .70,
list = FALSE,
times = 1)
CalgaryTrain <- Calgary[ trainIndex,]
CalgaryTest  <- Calgary[-trainIndex,]
ggplot() +
geom_sf(data=Calgary, aes(fill = CalgaryTrain)) +
scale_fill_viridis() +
labs(title="Calgary Training Set") +
mapTheme()
dat$Trainig<-ifelse((dat$PRES_N_RES_REC_COLLCTN+dat$PRES_N_RES_REC_TRTM)>0, 1,0)
trainIndex <- createDataPartition(calgary$inundation, p = .70,
list = FALSE,
times = 1)
trainIndex <- createDataPartition(Calgary$inundation, p = .70,
list = FALSE,
times = 1)
training <-
Calgary2 %>%
filter(training == 1)
plot(CalgaryTrain[,1], main="Calgary Training Set", color="Green")
plot(CalgaryTrain, color="Grey")
CalgaryModel <- glm(Inundation ~ .,
family="binomial"(link="logit"), data = CalgaryTrain %>%
as.data.frame() %>%
select(-geometry))
CalgaryModel <- glm(Inundation ~ .,
family="binomial"(link="logit"), data = (CalgaryTrain) %>%
as.data.frame() %>%
dplyr::select(-geometry))
summary(CalgaryModel)
summ(CalgaryModel)
sum(CalgaryModel)
classProbs <- predict(CalgaryModel, CalgaryTest, type="response")
hist(classProbs)
testProbs <- data.frame(obs = as.numeric(CalgaryTest$Inundation),
pred = classProbs)
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) + geom_density() +
facet_grid(obs ~ .) + xlab("Probability") + geom_vline(xintercept = .5) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Non-Inundation","Inundation"),
name = "")
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) + geom_density() +
facet_grid(obs ~ ., scales = "free") + xlab("Probability") + geom_vline(xintercept = .5) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Non-Inundation","Inundation"),
name = "")
install.packages("caret",
repos = "http://cran.r-project.org",
dependencies = c("Depends", "Imports", "Suggests"))
install.packages("caret", repos = "http://cran.r-project.org", dependencies = c("Depends", "Imports", "Suggests"))
ggplot(testProbs, aes(d = obs, m = pred)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey')
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) + geom_density() +
facet_grid(obs ~ ., scales = "free") + xlab("Probability") + geom_vline(xintercept = .5) +
scale_fill_manual(values = c("dodgerblue4", "darkgreen"),
labels = c("Non-Inundation","Inundation"),
name = "")
ggplot(testProbs, aes(d = obs, m = pred)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey')
cvFit <- train(as.factor(Calgary) ~ .,  data = Calgary %>%
as.data.frame() %>%
select(-dist_water,-tree_dens,-dev_sum, -basin, -flow_lengt, -pop_Dens),
method="glm", family="binomial",
trControl = ctrl)
cvFit <- train(as.factor(Calgary) ~ .,  data = Calgary %>%
as.data.frame() %>%
dplyr::select(-dist_water,-tree_dens,-dev_sum, -basin, -flow_lengt, -pop_Dens),
method="glm", family="binomial",
trControl = ctrl)
cvFit <- train(as.factor(Calgary) ~ .,  data = Calgary %>%
as.data.frame() %>%
dplyr::select(-dist_water,-tree_dens,-dev_sum, -basin, -flowlength, -popDens),
method="glm", family="binomial",
trControl = ctrl)
cvFit <- train(as.factor(Calgary) ~ .,  data = Calgary %>%
as.data.frame() %>%
dplyr::select(-dist_water,-tree_dens,-dev_sum, -basin, -flowlength, -Pop_Dens),
method="glm", family="binomial",
trControl = ctrl)
cvFit <- train(as.factor(Calgary) ~ .,  data = Calgary %>%
as.data.frame() %>%
dplyr::select(-dist_water,-tree_dens,-dev_sum, -basin, -flowlength, -PopDens),
method="glm", family="binomial",
trControl = ctrl)
test_predictions <- testProbs %>%
mutate(TN = predClass==0 & obs==0,
TP = predClass==1 & obs==1,
FN =  predClass==0 & obs==1,
FP = predClass==1 & obs==0)
View(testProbs)
test_predictions <- testProbs %>%
mutate(TN = pred==0 & obs==0,
TP = pred==1 & obs==1,
FN =  pred==0 & obs==1,
FP = pred==1 & obs==0)
test_predictions <- test_predictions %>%
mutate(confResult=case_when(TN == TRUE ~ "True_Negative",
TP == TRUE ~ "True_Positive",
FN == TRUE ~ "False_Negative",
FP == TRUE ~ "False_Positive"))
cal_test_predictions_mapdata <- cbind(CalgaryTest, test_predictions, by= "ID_FISHNET") %>% st_as_sf()
ggplot() +
geom_sf(data=cal_test_predictions_mapdata, aes(fill=confResult), colour=NA)+
scale_fill_discrete()+
mapTheme() +
labs(title="Map of Prediction Classes on Calgary Test")
View(cal_test_predictions_mapdata)
View(test_predictions)
preserve <-
cbind(Calgary,allPredictions) %>%
mutate(allPredictions = round(allPredictions * 100))
caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
ggplot(as.data.frame(cvFit$resample), aes(Accuracy)) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1)) +
labs(x="Accuracy",
y="Count")
cvFit <- train(as.factor(Calgary) ~ .,  data = Calgary %>%
as.data.frame() %>%
dplyr::select(-dist_water,-tree_dens,-dev_sum, -basin, -flowlength, -PopDens),
method="glm", family="binomial",
trControl = ctrl)
cvFit <- train(as.factor(Calgary) ~ .,  data = Calgary %>%
dplyr::select(-dist_water,-tree_dens,-dev_sum, -basin, -flowlength, -PopDens),
method="glm", family="binomial",
trControl = ctrl)
